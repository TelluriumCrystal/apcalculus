import javax.swing.JPanel;
import javax.swing.JFrame;
import java.util.ArrayList;
import java.awt.Color; 
import java.awt.BasicStroke; 
import org.jfree.chart.ChartPanel; 
import org.jfree.chart.JFreeChart; 
import org.jfree.data.xy.XYDataset; 
import org.jfree.data.xy.XYSeries; 
import org.jfree.ui.ApplicationFrame; 
import org.jfree.ui.RefineryUtilities; 
import org.jfree.chart.plot.XYPlot; 
import org.jfree.chart.ChartFactory; 
import org.jfree.chart.plot.PlotOrientation; 
import java.io.FileNotFoundException;
import org.jfree.data.xy.XYSeriesCollection; 
import org.jfree.chart.renderer.xy.XYSplineRenderer;
import java.awt.BorderLayout;

public class DataDisplay extends ApplicationFrame
{
  static ArrayList<Float> p, v, a;
  public static void importData(ArrayList<Float> position, ArrayList<Float> velocity, ArrayList<Float> acceleration)
  {
    p = position;
    v = velocity;
    a = acceleration;
  }
  public DataDisplay(String applicationTitle, String chartTitle)
   {
      super(applicationTitle);
      JFreeChart xylineChart = ChartFactory.createXYLineChart(
         chartTitle,
         "Time",
         "ft",
         createDataset(),
         PlotOrientation.VERTICAL,
         true, true, false);
         
      ChartPanel panel = new ChartPanel(xylineChart);
      panel.setPreferredSize( new java.awt.Dimension(560, 367));
      final XYPlot plot = xylineChart.getXYPlot();
      XYSplineRenderer renderer = new XYSplineRenderer();
      renderer.setSeriesPaint(0, Color.RED);
      renderer.setSeriesStroke(0, new BasicStroke(4.0f));
      plot.setRenderer(renderer); 
      setContentPane(panel); 
//    JPanel j = new JPanel();
//    JFrame f = new JFrame();
//    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(j);
//    j.setLayout(layout);
//    j.add(panel, BorderLayout.CENTER);
//    j.validate();
//    f.add(j);
//    f.pack();
//    f.setVisible(true);
      
   }
  private XYDataset createDataset()
  {
    final XYSeries position = new XYSeries( "Position" );
    for(int i = 0; i<p.size(); i+=2)
    {
      position.add(p.get(i),p.get(i+1));
    }
    final XYSeriesCollection dataset = new XYSeriesCollection();
    dataset.addSeries(position);
    return dataset;
  }
  public JPanel getGraph(String title)
  {
    String unit = "";
    XYSeries data;
    if(title.equals("Position"))
    {
      unit = "Feet";
      data = new XYSeries("Position");
      for(int i = 0; i<p.size(); i+=2)
      {
        data.add(p.get(i),p.get(i+1));
      }
    }
    else if(title.equals("Acceleration"))
    {
      unit = "Feet/Second^2";
      data = new XYSeries( "Acceleration" );
      for(int i = 0; i<a.size(); i++)
      {
        data.add(i/10.0,a.get(i));
      }
    }
    else if(title.equals("Velocity"))
    {
      unit = "Feet/Second^";
      data = new XYSeries("Velocity");
      for(int i = 0; i<v.size(); i++)
      {
        data.add(i/10.0,v.get(i));
      }
    }
    JFreeChart ok = ChartFactory.createXYLineChart(
                                                   title,
                                                   "Time",
                                                   unit,
                                                   createDataset(),
                                                   PlotOrientation.VERTICAL,
                                                   true, true, false);
                                                   
    JPanel j = new JPanel();
    return j;
  }
  public static void main(String[] args) throws FileNotFoundException
  {
    derivativecalculator calc = new derivativecalculator();
//    DataDisplay.importData(calc.getPositionData(calc.processData()));
//    DataDisplay chart = new DataDisplay("Position", "Position");
//    chart.pack();
//    RefineryUtilities.centerFrameOnScreen(chart);  
//    chart.setVisible(true);
//    DataDisplayVelocity.importData(calc.calculateDerivative(calc.getPositionData(calc.processData())));
//    DataDisplayVelocity cha = new DataDisplayVelocity("Velocity", "");
//    cha.pack();          
//    RefineryUtilities.centerFrameOnScreen(cha);          
//    cha.setVisible(true);
//    DataDisplayAcceleration.importData(calc.getAccelerationData(calc.getPositionData(calc.processData()), calc.calculateDerivative(calc.getPositionData(calc.processData()))));
//    DataDisplayAcceleration ch = new DataDisplayAcceleration("Acceleration", "");
//    ch.pack();          
//    RefineryUtilities.centerFrameOnScreen(ch);          
//    ch.setVisible(true);
  }
}